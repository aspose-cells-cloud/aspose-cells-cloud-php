<?php

/**
 * Web API Swagger specification
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 */


namespace Aspose\Cells\Cloud;

require_once('vendor\autoload.php');
require_once('test\Api\CellsApiTestBase.php');
use \Aspose\Cells\Cloud\Configuration;
use \Aspose\Cells\Cloud\ApiException;
use \Aspose\Cells\Cloud\ObjectSerializer;
use \Aspose\Cells\Cloud\CellsApiTestBase;
use \Aspose\Cells\Cloud\Api\CellsApi;
use \Aspose\Cells\Cloud\Model\PdfSaveOptions;
use \Aspose\Cells\Cloud\Model\MarkdownSaveOptions;
/**
 * CellsSaveAsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aspose\Cells\Cloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CellsSaveAsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
        $this->instance = new CellsApi(CellsApiTestBase::getSID(),CellsApiTestBase::getKey());
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for cellsSaveAsPostDocumentSaveAs
     *
     * Convert document and save result to storage..
     *
     */
    public function testCellsSaveAsPostDocumentSaveAs()
    {
        $name ='Book1.xlsx';    
        $saveOptions = null;
        $newfilename = "newbook.xlsx";
        $isAutoFitRows= 'true';
        $isAutoFitColumns= 'true';
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsSaveAsPostDocumentSaveAs($name, $saveOptions, $folder."/".$newfilename,$isAutoFitRows, $isAutoFitColumns, $folder);
        $this->assertEquals(200, $result['code']);
    }
    /**
     * Test case for cellsSaveAsPostDocumentSaveAsMD
     *
     * Convert document and save result to storage..
     *
     */
    public function testCellsSaveAsPostDocumentSaveAsMD()
    {
        $name ='Book1.xlsx';
        $saveOptions = null;
        $newfilename = "newbook.x.md";
        $isAutoFitRows= 'true';
        $isAutoFitColumns= 'true';
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsSaveAsPostDocumentSaveAs($name, $saveOptions, $folder."/".$newfilename,$isAutoFitRows, $isAutoFitColumns, $folder);
        $this->assertEquals(200, $result['code']);
    }
    /**
     * Test case for cellsSaveAsPostDocumentSaveAs
     *
     * Convert document and save result to storage..
     *
     */
    public function testCellsSaveAsPostDocumentSaveAsPDFTest()
    {
        $name ='Book1.xlsx';    
        $saveOptions = new PdfSaveOptions();
        $saveOptions->OnePagePerSheet = 'true';
        $saveOptions->SaveFormat = "pdf";
        $newfilename = "newbook.pdf";
        $isAutoFitRows= 'true';
        $isAutoFitColumns= 'true';
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsSaveAsPostDocumentSaveAs($name, $saveOptions, $newfilename,$isAutoFitRows, $isAutoFitColumns, $folder);
        $this->assertEquals(200, $result['code']);
    }
    /**
     * Test case for cellsSaveAsPostDocumentSaveAs
     *
     * Convert document and save result to storage..
     *
     */
    public function testCellsSaveAsPostDocumentSaveAsMDTest()
    {
        $name ='Book1.xlsx';
        $saveOptions = new MarkdownSaveOptions();
        $saveOptions->SaveFormat = "markdown";
        $newfilename = "newbook.pdf.md";
        $isAutoFitRows= 'true';
        $isAutoFitColumns= 'true';
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsSaveAsPostDocumentSaveAs($name, $saveOptions, $folder."/".$newfilename,$isAutoFitRows, $isAutoFitColumns, $folder);
        $this->assertEquals(200, $result['code']);
    }
    /**
     * Test case for cellsSaveAsPostDocumentSaveAs
     *
     * Convert document and save result to storage..
     *
     */
    public function testCellsSaveAsPostDocumentSaveAsPDFDropBoxTest()
    {
        $name ='Book1.xlsx';
        $saveOptions = new PdfSaveOptions();
        $saveOptions->OnePagePerSheet = 'true';
        $saveOptions->SaveFormat = "pdf";
        $newfilename = "newbook.pdf";
        $isAutoFitRows= 'true';
        $isAutoFitColumns= 'true';
        $folder = "PhpTest";
        $storage = "DropBox";
        CellsApiTestBase::ready( $this->instance, $name ,$folder, $storage);
        $result = $this->instance->cellsSaveAsPostDocumentSaveAs($name, $saveOptions, $newfilename,$isAutoFitRows, $isAutoFitColumns, $folder, $storage);
        $this->assertEquals(200, $result['code']);
    }
}
