<?php
/**
 * CellsPageSetupApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Aspose\Cells\Cloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web API Swagger specification
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Aspose\Cells\Cloud;

require_once('vendor\autoload.php');
require_once('test\Api\CellsApiTestBase.php');
use \Aspose\Cells\Cloud\Configuration;
use \Aspose\Cells\Cloud\ApiException;
use \Aspose\Cells\Cloud\ObjectSerializer;
use \Aspose\Cells\Cloud\CellsApiTestBase;
use \Aspose\Cells\Cloud\Api\CellsApi;
use \Aspose\Cells\Cloud\Model\PageSetup;

/**
 * CellsPageSetupApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aspose\Cells\Cloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CellsPageSetupApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
        $this->instance = new CellsApi("66164C51-693E-4904-A121-545961673EC1","536e76768419db9585afdd37bb5f7533");
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for cellsPageSetupDeleteHeaderFooter
     *
     * clear header footer.
     *
     */
    public function testCellsPageSetupDeleteHeaderFooter()
    {
        $name ='Book1.xlsx';
        $sheet_name ='Sheet1';
        $index = 0;         
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsPageSetupDeleteHeaderFooter($name, $sheet_name,$folder);
        $this->assertEquals(200, $result['code']);
    }

    /**
     * Test case for cellsPageSetupGetFooter
     *
     * get page footer information.
     *
     */
    public function testCellsPageSetupGetFooter()
    {
        $name ='Book1.xlsx';
        $sheet_name ='Sheet1';
        $index = 0;         
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsPageSetupGetFooter($name, $sheet_name,$folder);
        $this->assertEquals(200, $result['code']);
    }

    /**
     * Test case for cellsPageSetupGetHeader
     *
     * get page header information.
     *
     */
    public function testCellsPageSetupGetHeader()
    {
        $name ='Book1.xlsx';
        $sheet_name ='Sheet1';
        $index = 0;         
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsPageSetupGetHeader($name, $sheet_name,$folder);
        $this->assertEquals(200, $result['code']);
    }

    /**
     * Test case for cellsPageSetupGetPageSetup
     *
     * Get Page Setup information..
     *
     */
    public function testCellsPageSetupGetPageSetup()
    {
        $name ='Book1.xlsx';
        $sheet_name ='Sheet1';
        $index = 0;         
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsPageSetupGetPageSetup($name, $sheet_name,$folder);
        $this->assertEquals(200, $result['code']);
    }

    /**
     * Test case for cellsPageSetupPostFooter
     *
     * update  page footer information.
     *
     */
    public function testCellsPageSetupPostFooter()
    {
        $name ='Book1.xlsx';
        $sheet_name ='Sheet1';
        $section = 0;    
        $script = "test";
        $isFirstPage = 'true';     
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsPageSetupPostFooter($name, $sheet_name,$section, $script ,  $isFirstPage,$folder);
        $this->assertEquals(200, $result['code']);
    }

    /**
     * Test case for cellsPageSetupPostHeader
     *
     * update  page header information.
     *
     */
    public function testCellsPageSetupPostHeader()
    {
        $name ='Book1.xlsx';
        $sheet_name ='Sheet1';
        $section = 1;    
        $script = "test";
        $isFirstPage = 'true';     
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsPageSetupPostHeader($name, $sheet_name,$section, $script ,  $isFirstPage,$folder);
        $this->assertEquals(200, $result['code']);
    }

    /**
     * Test case for cellsPageSetupPostPageSetup
     *
     * Update Page Setup information..
     *
     */
    public function testCellsPageSetupPostPageSetup()
    {
        $name ='Book1.xlsx';
        $sheet_name ='Sheet1';
        $pageSetup = new PageSetup(); 
        $pageSetup->setBlackAndWhite('true') ;        
        $folder = "PhpTest";
        CellsApiTestBase::ready(  $this->instance,$name ,$folder);
        $result = $this->instance->cellsPageSetupPostPageSetup($name, $sheet_name, $pageSetup,$folder);
        $this->assertEquals(200, $result['code']);
    }
}
